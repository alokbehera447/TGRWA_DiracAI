{"ast":null,"code":"var _jsxFileName = \"/home/diracai/Alok_learning/TGRWA_Website/src/components/SideNavBar/SideBarDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport classes from './SideBarDashboard.module.css';\nimport SideNavBarButton from './SideNavBarButtonDashboard';\nimport { BsFillChatDotsFill, BsTable, BsFillCameraVideoFill, BsCalendarDay, BsFillCalendarDayFill, BsJournalText, BsQuestionSquare } from 'react-icons/bs';\nimport { AiFillHome, AiOutlineHome } from 'react-icons/ai';\nimport { MdMailOutline, MdMail } from 'react-icons/md';\nimport { useHistory } from \"react-router-dom\";\nimport QuickMeetingPage from './QuickMeetingPage';\nimport SideNavBarButtonQMeeting from './SideNavBarButtonQMeeting';\nimport { FaTools, FaExternalLinkAlt } from 'react-icons/fa';\nimport { useMediaPredicate } from \"react-media-hook\";\nimport { FiUsers } from 'react-icons/fi';\nimport { BiArchiveIn, BiLinkExternal } from 'react-icons/bi';\nimport { BsChatRightDots, BsChatRightDotsFill, BsPeopleFill, BsPeople, BsBoxArrowUpRight, BsEnvelopeFill, BsEnvelope, BsTools, BsArchive, BsArchiveFill } from 'react-icons/bs';\nimport { MdOutlineDashboard, MdDashboard } from 'react-icons/md';\nimport { RiDashboardFill, RiDashboardLine } from 'react-icons/ri';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SideBarDashboard = props => {\n  _s();\n  const smallerThan750px = useMediaPredicate(\"(max-width: 850px)\");\n  let history = useHistory();\n  let inActivebuttonColor = \"var(--sideNavBarDashBoardBtnColor)\";\n  let inActivebuttonBkgColor = \"var(--sideNavBarDashBoardBkgColor)\";\n  const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n  const [generalChatButtonColor, setGeneralChatButtonColor] = useState({\n    backgroundColor: inActivebuttonBkgColor,\n    //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n    color: \"var(--themeColor)\",\n    borderStyle: \"none\",\n    borderColor: \"var(--themeColor)\",\n    borderWidth: \"1px\",\n    borderRadius: \"0px\",\n    fontWeight: \"normal\",\n    iconObj: BsChatRightDots\n  });\n  const [homeButtonColor, setHomeButtonColor] = useState({\n    backgroundColor: \"var(--sideNavBarDashBoardBtnBkgColor)\",\n    color: \"var(--themeColor)\",\n    borderStyle: \"none\",\n    borderColor: \"var(--themeColor)\",\n    borderWidth: \"1px\",\n    borderRadius: \"0px\",\n    fontWeight: \"normal\",\n    iconObj: MdOutlineDashboard\n  });\n  const [emailButtonColor, setEmailButtonColor] = useState({\n    backgroundColor: \"var(--sideNavBarDashBoardBtnBkgColor)\",\n    color: \"var(--themeColor)\",\n    borderStyle: \"none\",\n    borderColor: \"var(--themeColor)\",\n    borderWidth: \"1px\",\n    borderRadius: \"0px\",\n    fontWeight: \"normal\",\n    iconObj: MdMailOutline\n  });\n  const [contactsButtonColor, setContactsButtonColor] = useState({\n    backgroundColor: \"var(--sideNavBarDashBoardBtnBkgColor)\",\n    color: \"var(--themeColor)\",\n    borderStyle: \"none\",\n    borderColor: \"var(--themeColor)\",\n    borderWidth: \"1px\",\n    borderRadius: \"0px\",\n    fontWeight: \"normal\",\n    iconObj: MdMailOutline\n  });\n  useEffect(() => {\n    setSideNavBarWidth(props.sideNavBarWidth);\n  }, [props.sideNavBarWidth]);\n  const [showQuickMeetingInfo, setShowQuickMeetingInfo] = useState(false);\n  const [meetingRoomName, setMeetingRoomName] = useState(null);\n  const createMeetingHandler = () => {\n    let userId = props.userData.id;\n    let meetingRoomName_ = `meet.${userId}.${Date.now()}.${Math.random() * 100}`;\n    setMeetingRoomName(meetingRoomName => meetingRoomName_);\n    // console.log('meetingRoomName: ',meetingRoomName);\n    setShowQuickMeetingInfo(true);\n\n    // let meetingURL='http://app.diracai.com/video/meet.1.1663275331164.27.54381016977858'\n    // let pattern = '/video/general/meetings/[1-9]+';\n    // let pattern2 = '/video/meet.[1-9]+.[1-9]+.[1-9]+.[1-9]+'\n\n    // let result = meetingURL.match(pattern2);\t    \n\n    //console.log(\"Matching Found?: \", result);\t    \n  };\n\n  useEffect(() => {\n    let inActivebuttonBkgColor = \"var(--sideNavBarDashBoardBkgColor)\";\n    let activeButtonColor = {\n      backgroundColor: \"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n      color: \"var(--sideNavBarDashBoardOnClickBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"var(--themeColor)\",\n      borderWidth: \"1px\",\n      borderRadius: \"calc( 0.2 * var(--headerHeight) )\",\n      fontWeight: \"bold\",\n      iconObj: BsChatRightDotsFill\n    };\n    let inActivebuttonColor = {\n      backgroundColor: inActivebuttonBkgColor,\n      //\"var(--sideNavBarDashBoardBtnBkgColor)\",//#c2c3c4\n      color: \"var(--sideNavBarDashBoardBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"grey\",\n      borderWidth: \"1px\",\n      borderRadius: \"0px\",\n      fontWeight: \"normal\",\n      iconObj: BsChatRightDots\n    };\n    !props.generalChatMounted && setGeneralChatButtonColor(generalChatButtonColor => inActivebuttonColor);\n    props.generalChatMounted && setGeneralChatButtonColor(generalChatButtonColor => activeButtonColor);\n  }, [props.generalChatMounted]);\n  useEffect(() => {\n    let inActivebuttonBkgColor = \"var(--sideNavBarDashBoardBkgColor)\";\n    let activeButtonColor = {\n      //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n      backgroundColor: \"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n      color: \"var(--sideNavBarDashBoardOnClickBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"var(--themeColor)\",\n      borderWidth: \"1px\",\n      borderRadius: \"var(--cardBorderRadius)\",\n      fontWeight: \"bold\",\n      iconObj: RiDashboardFill\n    };\n    let inActivebuttonColor = {\n      backgroundColor: inActivebuttonBkgColor,\n      //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n      color: \"var(--sideNavBarDashBoardBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"grey\",\n      borderWidth: \"1px\",\n      borderRadius: \"0px\",\n      fontWeight: \"normal\",\n      iconObj: RiDashboardLine\n    };\n    !props.homeMounted && setHomeButtonColor(homeButtonColor => inActivebuttonColor);\n    props.homeMounted && setHomeButtonColor(homeButtonColor => activeButtonColor);\n  }, [props.homeMounted]);\n  useEffect(() => {\n    let inActivebuttonBkgColor = \"var(--sideNavBarDashBoardBkgColor)\";\n    let activeButtonColor = {\n      //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n      backgroundColor: \"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n      color: \"var(--sideNavBarDashBoardOnClickBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"var(--themeColor)\",\n      borderWidth: \"1px\",\n      borderRadius: \"calc( 0.2 * var(--headerHeight) )\",\n      fontWeight: \"bold\",\n      iconObj: BsEnvelopeFill\n    };\n    let inActivebuttonColor = {\n      backgroundColor: inActivebuttonBkgColor,\n      //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n      color: \"var(--sideNavBarDashBoardBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"grey\",\n      borderWidth: \"1px\",\n      borderRadius: \"0px\",\n      fontWeight: \"normal\",\n      iconObj: BsEnvelope\n    };\n    !props.emailMounted && setEmailButtonColor(emailButtonColor => inActivebuttonColor);\n    props.emailMounted && setEmailButtonColor(emailButtonColor => activeButtonColor);\n  }, [props.emailMounted]);\n  useEffect(() => {\n    let inActivebuttonBkgColor = \"var(--sideNavBarDashBoardBkgColor)\";\n    console.log(\"contacts mounted\");\n    let activeButtonColor = {\n      //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n      backgroundColor: \"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n      color: \"var(--sideNavBarDashBoardOnClickBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"var(--themeColor)\",\n      borderWidth: \"1px\",\n      borderRadius: \"calc( 0.2 * var(--headerHeight) )\",\n      fontWeight: \"bold\",\n      iconObj: BsEnvelopeFill\n    };\n    let inActivebuttonColor = {\n      backgroundColor: inActivebuttonBkgColor,\n      //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n      color: \"var(--sideNavBarDashBoardBtnColor)\",\n      borderStyle: \"none\",\n      borderColor: \"grey\",\n      borderWidth: \"1px\",\n      borderRadius: \"0px\",\n      fontWeight: \"normal\",\n      iconObj: BsEnvelope\n    };\n    !props.contactsMounted && setContactsButtonColor(contactsButtonColor => inActivebuttonColor);\n    props.contactsMounted && setContactsButtonColor(contactsButtonColor => activeButtonColor);\n  }, [props.contactsMounted]);\n  const generalChatHandler = () => {\n    history.push('/dashboard/generalchat');\n    smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n    smallerThan750px && props.setContract(false);\n  };\n  const homeHandler = () => {\n    history.push('/app/dashboard/general/exams');\n    smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n    smallerThan750px && props.setContract(false);\n  };\n  const showChatWindowOptions = () => {};\n  const closeQuickMeetingInfo = () => {\n    setShowQuickMeetingInfo(false);\n  };\n  const emailHandler = () => {\n    history.push('/home/email');\n    smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n    smallerThan750px && props.setContract(false);\n  };\n  const utilityHandler = () => {};\n  const contactsHandler = () => {\n    history.push('/home/contacts');\n  };\n  const timeTableHandler = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.sideBarDashboard,\n    style: {\n      width: sideNavBarWidth\n    },\n    children: [showQuickMeetingInfo && /*#__PURE__*/_jsxDEV(QuickMeetingPage, {\n      onPress: closeQuickMeetingInfo,\n      userData: props.userData,\n      meetingRoomName: meetingRoomName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 3\n    }, this), props.userData.usertype !== 4 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n        onPress: homeHandler,\n        icon: homeButtonColor.iconObj,\n        name: \"Dashboard\",\n        buttonColor: {\n          background: homeButtonColor.backgroundColor,\n          borderStyle: homeButtonColor.borderStyle,\n          borderColor: homeButtonColor.borderColor,\n          color: homeButtonColor.color,\n          borderRadius: homeButtonColor.borderRadius,\n          fontWeight: homeButtonColor.fontWeight\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 4\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 1\n  }, this);\n};\n_s(SideBarDashboard, \"6CFT2S3DP7CFxSZvxIwVzeQ4cEg=\", false, function () {\n  return [useMediaPredicate, useHistory];\n});\n_c = SideBarDashboard;\nexport default SideBarDashboard;\nvar _c;\n$RefreshReg$(_c, \"SideBarDashboard\");","map":{"version":3,"names":["React","useState","useEffect","classes","SideNavBarButton","BsFillChatDotsFill","BsTable","BsFillCameraVideoFill","BsCalendarDay","BsFillCalendarDayFill","BsJournalText","BsQuestionSquare","AiFillHome","AiOutlineHome","MdMailOutline","MdMail","useHistory","QuickMeetingPage","SideNavBarButtonQMeeting","FaTools","FaExternalLinkAlt","useMediaPredicate","FiUsers","BiArchiveIn","BiLinkExternal","BsChatRightDots","BsChatRightDotsFill","BsPeopleFill","BsPeople","BsBoxArrowUpRight","BsEnvelopeFill","BsEnvelope","BsTools","BsArchive","BsArchiveFill","MdOutlineDashboard","MdDashboard","RiDashboardFill","RiDashboardLine","jsxDEV","_jsxDEV","Fragment","_Fragment","SideBarDashboard","props","_s","smallerThan750px","history","inActivebuttonColor","inActivebuttonBkgColor","sideNavBarWidth","setSideNavBarWidth","generalChatButtonColor","setGeneralChatButtonColor","backgroundColor","color","borderStyle","borderColor","borderWidth","borderRadius","fontWeight","iconObj","homeButtonColor","setHomeButtonColor","emailButtonColor","setEmailButtonColor","contactsButtonColor","setContactsButtonColor","showQuickMeetingInfo","setShowQuickMeetingInfo","meetingRoomName","setMeetingRoomName","createMeetingHandler","userId","userData","id","meetingRoomName_","Date","now","Math","random","activeButtonColor","generalChatMounted","homeMounted","emailMounted","console","log","contactsMounted","generalChatHandler","push","setWidth","setContract","homeHandler","showChatWindowOptions","closeQuickMeetingInfo","emailHandler","utilityHandler","contactsHandler","timeTableHandler","className","sideBarDashboard","style","width","children","onPress","fileName","_jsxFileName","lineNumber","columnNumber","usertype","icon","name","buttonColor","background","_c","$RefreshReg$"],"sources":["/home/diracai/Alok_learning/TGRWA_Website/src/components/SideNavBar/SideBarDashboard.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './SideBarDashboard.module.css';\nimport SideNavBarButton from './SideNavBarButtonDashboard';\nimport {BsFillChatDotsFill, BsTable, BsFillCameraVideoFill,BsCalendarDay, BsFillCalendarDayFill, BsJournalText,BsQuestionSquare} from 'react-icons/bs';\nimport {AiFillHome,AiOutlineHome} from 'react-icons/ai';\nimport { MdMailOutline, MdMail} from 'react-icons/md';\nimport { useHistory } from \"react-router-dom\";\nimport QuickMeetingPage from './QuickMeetingPage';\nimport SideNavBarButtonQMeeting from './SideNavBarButtonQMeeting';\nimport {FaTools,FaExternalLinkAlt} from 'react-icons/fa';\nimport { useMediaPredicate } from \"react-media-hook\";\nimport {FiUsers} from 'react-icons/fi';\nimport {BiArchiveIn, BiLinkExternal} from 'react-icons/bi';\nimport {BsChatRightDots, BsChatRightDotsFill, \n\tBsPeopleFill, BsPeople, BsBoxArrowUpRight, \n\tBsEnvelopeFill, BsEnvelope, BsTools , BsArchive, BsArchiveFill} from 'react-icons/bs';\n\n\nimport {MdOutlineDashboard, MdDashboard} from 'react-icons/md';\n\nimport {RiDashboardFill, RiDashboardLine} from 'react-icons/ri';\n\n\n\n\nconst SideBarDashboard =(props)=>{\n\n\n    const smallerThan750px = useMediaPredicate(\"(max-width: 850px)\");\n\n    let history = useHistory();\n    let inActivebuttonColor=\"var(--sideNavBarDashBoardBtnColor)\";\n    let inActivebuttonBkgColor=\"var(--sideNavBarDashBoardBkgColor)\"; \n\n    const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n\n\n    const [generalChatButtonColor, setGeneralChatButtonColor]=useState(\n      {  backgroundColor:inActivebuttonBkgColor,  //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n         color:\"var(--themeColor)\",\n         borderStyle:\"none\",\n         borderColor:\"var(--themeColor)\",\n         borderWidth:\"1px\",\n\t borderRadius:\"0px\",\n         fontWeight:\"normal\",\n\t iconObj: BsChatRightDots\n      }\t     \n    );\n\n    const [homeButtonColor, setHomeButtonColor]=useState(\n      {  backgroundColor:\"var(--sideNavBarDashBoardBtnBkgColor)\",\n         color:\"var(--themeColor)\",\n         borderStyle:\"none\",\n         borderColor:\"var(--themeColor)\",\n         borderWidth:\"1px\",\n\t borderRadius:\"0px\",\n\t fontWeight:\"normal\",\n         iconObj: MdOutlineDashboard\n      }\n    );\n\n\n\n    const [emailButtonColor, setEmailButtonColor]=useState(\n      {  backgroundColor:\"var(--sideNavBarDashBoardBtnBkgColor)\",\n         color:\"var(--themeColor)\",\n         borderStyle:\"none\",\n         borderColor:\"var(--themeColor)\",\n         borderWidth:\"1px\",\n\t borderRadius:\"0px\",\n         fontWeight:\"normal\",\n\t iconObj: MdMailOutline\n      }\n    );\n\n\n     const [contactsButtonColor, setContactsButtonColor]=useState(\n      {  backgroundColor:\"var(--sideNavBarDashBoardBtnBkgColor)\",\n         color:\"var(--themeColor)\",\n         borderStyle:\"none\",\n         borderColor:\"var(--themeColor)\",\n         borderWidth:\"1px\",\n         borderRadius:\"0px\",\n         fontWeight:\"normal\",\n         iconObj: MdMailOutline\n      }\n    );\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    useEffect(() => {\n        setSideNavBarWidth(props.sideNavBarWidth);\n    }, [props.sideNavBarWidth]);\n\n\n    const [showQuickMeetingInfo, setShowQuickMeetingInfo] = useState(false);\n    const [meetingRoomName, setMeetingRoomName] = useState(null); \n\n    const createMeetingHandler =() =>{\n\n       let userId= props.userData.id;\n\n       \t    \n       let meetingRoomName_ = `meet.${userId}.${Date.now()}.${Math.random()*100 }`;\n       setMeetingRoomName(meetingRoomName=>meetingRoomName_); \n      // console.log('meetingRoomName: ',meetingRoomName);\n       setShowQuickMeetingInfo(true);\n\n     // let meetingURL='http://app.diracai.com/video/meet.1.1663275331164.27.54381016977858'\n     // let pattern = '/video/general/meetings/[1-9]+';\n     // let pattern2 = '/video/meet.[1-9]+.[1-9]+.[1-9]+.[1-9]+'\n\n     // let result = meetingURL.match(pattern2);\t    \n \n      //console.log(\"Matching Found?: \", result);\t    \n\n\n\n\n    } \n\n\n    useEffect(()=>{\n        let inActivebuttonBkgColor=\"var(--sideNavBarDashBoardBkgColor)\";\n\n        let activeButtonColor= {  \n\t    backgroundColor:\"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n            color:\"var(--sideNavBarDashBoardOnClickBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"var(--themeColor)\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"calc( 0.2 * var(--headerHeight) )\",\n            fontWeight:\"bold\",\n\t    iconObj: BsChatRightDotsFill\n            };\n        let inActivebuttonColor= {  backgroundColor:inActivebuttonBkgColor,  //\"var(--sideNavBarDashBoardBtnBkgColor)\",//#c2c3c4\n            color:\"var(--sideNavBarDashBoardBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"grey\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"0px\",\n            fontWeight:\"normal\",\n\t    iconObj: BsChatRightDots\n            };\n\n\n        !props.generalChatMounted && setGeneralChatButtonColor(generalChatButtonColor=>inActivebuttonColor);\n        props.generalChatMounted &&  setGeneralChatButtonColor(generalChatButtonColor=>activeButtonColor);\n\n\n    },[props.generalChatMounted]);\t\n\n\n    useEffect(()=>{\n       let inActivebuttonBkgColor=\"var(--sideNavBarDashBoardBkgColor)\";\n\n        let activeButtonColor= {  \n\t    //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n            backgroundColor:\"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n            color:\"var(--sideNavBarDashBoardOnClickBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"var(--themeColor)\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"var(--cardBorderRadius)\",\n\t    fontWeight:\"bold\",\n\t    iconObj:RiDashboardFill\n            };\n        let inActivebuttonColor= {  backgroundColor:inActivebuttonBkgColor, //\"var(--sideNavBarDashBoardBtnBkgColor)\",\n            color:\"var(--sideNavBarDashBoardBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"grey\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"0px\",\n\t    fontWeight:\"normal\",\n\t    iconObj:RiDashboardLine\n            };\n\n\n        !props.homeMounted && setHomeButtonColor(homeButtonColor=>inActivebuttonColor);\n        props.homeMounted &&  setHomeButtonColor(homeButtonColor=>activeButtonColor);\n\n\n    },[props.homeMounted]);\n\n\n     useEffect(()=>{\n        let inActivebuttonBkgColor=\"var(--sideNavBarDashBoardBkgColor)\";\n\n        let activeButtonColor= {\n            //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n            backgroundColor:\"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n            color:\"var(--sideNavBarDashBoardOnClickBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"var(--themeColor)\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"calc( 0.2 * var(--headerHeight) )\",\n            fontWeight:\"bold\",\n\t    iconObj:BsEnvelopeFill\n            };\n        let inActivebuttonColor= {  backgroundColor: inActivebuttonBkgColor,//\"var(--sideNavBarDashBoardBtnBkgColor)\",\n            color:\"var(--sideNavBarDashBoardBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"grey\",\n            borderWidth:\"1px\",\n\t    borderRadius:\"0px\",\n            fontWeight:\"normal\",\n\t    iconObj:BsEnvelope\n            };\n\n        !props.emailMounted && setEmailButtonColor(emailButtonColor=>inActivebuttonColor);\n        props.emailMounted &&  setEmailButtonColor(emailButtonColor=>activeButtonColor);\n\n\n    },[props.emailMounted]);\n\n\n     useEffect(()=>{\n        let inActivebuttonBkgColor=\"var(--sideNavBarDashBoardBkgColor)\";\n\n\tconsole.log(\"contacts mounted\");    \n        let activeButtonColor= {\n            //backgroundColor:\"var(--sideNavBarDashBoardOnClickBtnBkgColor)\",\n            backgroundColor:\"linear-gradient(to right, var(--sideNavBarDashBoardOnClickBtnBkgColor) 100%, var(--themeColor) 0%)\",\n            color:\"var(--sideNavBarDashBoardOnClickBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"var(--themeColor)\",\n            borderWidth:\"1px\",\n            borderRadius:\"calc( 0.2 * var(--headerHeight) )\",\n            fontWeight:\"bold\",\n            iconObj:BsEnvelopeFill\n            };\n        let inActivebuttonColor= {  backgroundColor: inActivebuttonBkgColor,//\"var(--sideNavBarDashBoardBtnBkgColor)\",\n            color:\"var(--sideNavBarDashBoardBtnColor)\",\n            borderStyle:\"none\",\n            borderColor:\"grey\",\n            borderWidth:\"1px\",\n            borderRadius:\"0px\",\n            fontWeight:\"normal\",\n            iconObj:BsEnvelope\n            };\n\n        !props.contactsMounted && setContactsButtonColor(contactsButtonColor=>inActivebuttonColor);\n        props.contactsMounted &&  setContactsButtonColor(contactsButtonColor=>activeButtonColor);\n\n\n    },[props.contactsMounted]);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    const generalChatHandler =() =>{\n      history.push('/dashboard/generalchat');\t  \n      smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n      smallerThan750px && props.setContract(false);\n    }\n\n\n    const homeHandler=()=>{\n    history.push('/app/dashboard/general/exams');\n    smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n    smallerThan750px && props.setContract(false);\n\n\n    }\n\n\n\n\n\n\n\n\n  const showChatWindowOptions=()=>{\n\n\n   \n\n\n\n\n\n  }\n\n\n\n   const closeQuickMeetingInfo=()=>{\n     setShowQuickMeetingInfo(false);\n   }\n\n\n\n   const emailHandler=()=>{\n     history.push('/home/email');\n     smallerThan750px && props.setWidth('var(--sideNavBarWidthOnContract)');\n     smallerThan750px && props.setContract(false);\n   }\n\n   const utilityHandler=()=>{\n\n\n   }\n\n\n   const contactsHandler=()=>{\n\n\n   history.push('/home/contacts');\n\n   }\n\n\n\n   const timeTableHandler=()=>{\n\n\n\n   }\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.sideBarDashboard} style={{width:sideNavBarWidth}}>\n\n\n  { showQuickMeetingInfo &&\n  <QuickMeetingPage onPress={closeQuickMeetingInfo} \n\t            userData={props.userData}\n\t            meetingRoomName={meetingRoomName}\n\t            />\n  }\n\n\n\n\n { props.userData.usertype !==4 && \n \n  <>\t \n   {/*\n   <SideNavBarButtonQMeeting onPress={createMeetingHandler}\n         icon={BsFillCameraVideoFill}\n         name=\"+Quick meeting\"\n         buttonColor={{background:'white',borderStyle:'solid',color:'var(--themeColor)',borderColor:'lightgrey' }}\n         />\n   */}\n\n\n   <SideNavBarButton onPress={homeHandler}\n         icon={homeButtonColor.iconObj}\n         name=\"Dashboard\"\n         buttonColor={{  \n\t\t         background: homeButtonColor.backgroundColor,\n                         borderStyle: homeButtonColor.borderStyle,\n                         borderColor: homeButtonColor.borderColor,\n                         color: homeButtonColor.color,\n\t\t\t borderRadius:homeButtonColor.borderRadius,\n\t\t\t fontWeight:homeButtonColor.fontWeight\n\t             }}\n         />\n\n\n\n    {/*\n    <SideNavBarButton onPress={generalChatHandler} \n\t icon={generalChatButtonColor.iconObj} \n\t name=\"General Chat\"\n\t onMouseEnter={showChatWindowOptions}\n\t buttonColor={{  background:generalChatButtonColor.backgroundColor,\n\t\t\t borderStyle: generalChatButtonColor.borderStyle,\n\t\t\t borderColor: generalChatButtonColor.borderColor,\n\t                 color: generalChatButtonColor.color,\n\t\t\t borderRadius:generalChatButtonColor.borderRadius,\n                         fontWeight:generalChatButtonColor.fontWeight\n\t              }}\n\t />\n\n\n\n\n   <SideNavBarButton onPress={emailHandler}\n         icon={emailButtonColor.iconObj} \n         name=\"Mail\"\n         buttonColor={{ background:emailButtonColor.backgroundColor,\n\t\t        borderStyle:emailButtonColor.borderStyle,\n\t\t\tborderColor:emailButtonColor.borderColor,\n\t\t\tcolor:emailButtonColor.color,\n\t\t\tborderRadius:emailButtonColor.borderRadius,\n                        fontWeight:emailButtonColor.fontWeight\n\t              }}\n         />\n\n\n <SideNavBarButton onPress={contactsHandler}\n         icon={FiUsers}\n         name=\"Contacts\"\n         buttonColor={{ background:contactsButtonColor.backgroundColor,\n                        borderStyle:contactsButtonColor.borderStyle,\n                        borderColor:contactsButtonColor.borderColor,\n                        color:contactsButtonColor.color,\n                        borderRadius:contactsButtonColor.borderRadius,\n                        fontWeight:contactsButtonColor.fontWeight\n                      }}\n\n         />\n\n\n\n\n  <SideNavBarButton onPress={utilityHandler}\n         icon={BsCalendarDay}\n         name=\"Calender\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n\n\n\n   <SideNavBarButton onPress={timeTableHandler}\n         icon={BsTable}\n         name=\"Time Table\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n  <SideNavBarButton onPress={utilityHandler}\n         icon={BsTools}\n         name=\"Utility\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n\n  <SideNavBarButton onPress={utilityHandler}\n         icon={BsBoxArrowUpRight}\n         name=\"Useful links\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n   <SideNavBarButton onPress={utilityHandler}\n         icon={FiUsers}\n         name=\"Social Network\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n\n\n \n   <SideNavBarButton onPress={utilityHandler}\n         icon={BsJournalText}\n         name=\"Diary\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n\n  <SideNavBarButton onPress={utilityHandler}\n         icon={BsArchive}\n         name=\"Archived Courses\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n\n\n\n\n\n  <SideNavBarButton onPress={utilityHandler}\n         icon={BsQuestionSquare}\n         name=\"Help Center\"\n         buttonColor={{background:inActivebuttonBkgColor,borderStyle:'none',borderColor:'grey',color:inActivebuttonColor }}\n         />\n\n    */}\n\n\n\n\n\n\n    {/*\t \n    <SideNavBarButton onPress={appointmentsHandler}\n         icon={AiFillPhone} \n         name=\"Make a call \"\n         buttonColor={{background:appointButtonColor,borderStyle:'solid',borderColor:'var(--themeColor)' }}\n         />\n     */}\n\n\n\n\n\n\n  </>\n\n }\n</div>\n\n);\n\n\n}\n\nexport default SideBarDashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}